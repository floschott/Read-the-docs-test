# Plot the flow field
#-----------------------
zendcone = 0
zendconetop = 370
rmin = 240
rmax = 520
RadPercent = 0.95
#-----------------------

ampliavg = np.sqrt(np.power(urcyl_average,2) + np.power(uzcyl_average,2))*PixeSize/TimeStep
amplifit = np.sqrt(np.power(urcyl_ref,2) + np.power(uzcyl_ref,2))*PixeSize/TimeStep
amplidif = np.sqrt(np.power(urcyl_average-np.asarray(urcyl_ref),2) + np.power(-np.asarray(uzcyl_average) - np.asarray(uzcyl_ref),2))*PixeSize/TimeStep
norm = mpl.colors.Normalize(vmin=np.nanmin([ampliavg,amplifit,amplidif]), vmax= np.nanmax([ampliavg,amplifit,amplidif]), clip=False)
print(np.nanmin([ampliavg,amplifit,amplidif]), np.nanmax([ampliavg,amplifit,amplidif]))
ampliavgMin = np.nanmin([ampliavg,amplifit,amplidif]); ampliavgMax = np.nanmax([ampliavg,amplifit,amplidif])

ampliavg_HR = np.sqrt(np.power(urcyl_average_HR,2) + np.power(uzcyl_average_HR,2))*PixeSize/TimeStep

ZZ,YY,XX = np.shape(EmptyConeIm)
zmid=ZZ//2;ymid=YY//2;xmid=XX//2
Shiftr = XX//2
Shiftz = np.nanmin(zcyl_grid_flow)+ZZ+Epsilon_zcyl

fig, C = plt.subplots(1,1, figsize = (36, 20))


#C[1].imshow(np.flip(EmptyConeIm[230:,ymid,:],0), cmap='bone')
#C[2].imshow(np.flip(EmptyConeIm[230:,ymid,:],0), cmap='bone')

Shiftr = XX//2
Shiftz = np.nanmin(zcyl_grid_flow)+ZZ

widths = np.ones((len(urcyl_average)*len(urcyl_average[0])))*1e-110

C.quiver(rcyl_grid_flow, -np.asarray(zcyl_grid_flow) + np.nanmin(zcyl_grid_flow) + ZZ - 2*Epsilon_zcyl, np.asarray(urcyl_average), -np.asarray(uzcyl_average),   linewidths=widths,scale = ampliavgMax*2e-1, cmap=plt.cm.jet)
C.imshow(np.flip(EmptyConeIm[320:,ymid,xmid:],0), cmap='bone',origin='lower')

Contour = C.contour(rcyl_grid_flow_HR, -np.asarray(zcyl_grid_flow_HR)+ Shiftz,  np.round(ampliavg_HR,2), cmap=plt.cm.jet, linewidths = 5)
#C.clabel(Contour, fontsize=20)
#C[0].quiver(-np.asarray(rcyl_grid_flow), -np.asarray(zcyl_grid_flow), -np.asarray(urcyl_average), -np.asarray(uzcyl_average), ampliavg, scale = 5000, cmap=plt.cm.jet, norm = norm)

# fit field
#C[1].quiver(rcyl_grid_flow, -np.asarray(zcyl_grid_flow), np.asarray(urcyl_ref), np.asarray(uzcyl_ref), amplifit, scale = amplifitMax*20, cmap=plt.cm.jet, norm = norm_amplifit)
#C[1].quiver(-rcyl_grid_flow, -np.asarray(zcyl_grid_flow), -np.asarray(urcyl_ref)*PixeSize/TimeStep, np.asarray(uzcyl_ref)*PixeSize/TimeStep, amplifit, scale = 5000, cmap=plt.cm.jet, norm = norm)

# dev from ref  field
#C[2].quiver(rcyl_grid_flow, -np.asarray(zcyl_grid_flow), (urcyl_average-np.asarray(urcyl_ref))/amplidif, (-np.asarray(uzcyl_average)-np.asarray(uzcyl_ref))/amplidif, amplidif, scale = 40, cmap=plt.cm.jet, norm = norm_amplidif)

#C[0].plot(np.cos(np.linspace(50*np.pi/180,130*np.pi/180,180))*np.asarray(rminfit),np.sin(np.linspace(50*np.pi/180,130*np.pi/180,180))*np.asarray(rminfit), 'k-')
#C[0].plot(np.cos(np.linspace(50*np.pi/180,130*np.pi/180,180))*np.asarray(rmaxfit),np.sin(np.linspace(50*np.pi/180,130*np.pi/180,180))*np.asarray(rmaxfit), 'k-')



for index in [0,1,2]:
    C.tick_params(axis="x", labelsize=12)
    C.tick_params(axis="y", labelsize=12)
    #plot_rectangle(C[index], -np.max(rcyl_grid_flow), np.max(rcyl_grid_flow), zendcone, zendcone,  color = 'firebrick', linestyle = '-')
    #plot_rectangle(C[index], 0, 0, 0, -np.min(zcyl_grid_flow),  color = 'firebrick', linestyle = '-')
    C.axis('scaled')
    ytop = 251.74138173921594
    xtop = 254.67987111419424 
    meanLb = 202.81241858445512
    #C[index].plot([0, ytip-(ytop-meanLb)],[0,ztip], color = 'firebrick', linestyle = '--'); 
    #C[index].plot([0, -ytip+(ytop-meanLb)],[0,ztip], color = 'firebrick', linestyle = '--');

#fig.savefig('/mxn/home/flosch/jupyter_notebooks/tomograms/users/flosch/PSI_2015/Conical_constriction/Displtmap_f_time/' + NameBase + 'StreamPlot_' + str(IndexImArtefacts[0]) + '-' + str(IndexImArtefacts[-1]) + '.jpeg', format='jpeg', dpi=200)
